name: Azure Pipelines
variables:
  python.version: '3.7.6'
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      name: Hosted Ubuntu 1804
    steps:
    - task: TerraformInstaller@0
      displayName: Use Terraform 1.1.2
      inputs:
        terraformVersion: 1.1.2
    - task: TerraformCLI@0
      displayName: 'check terraform version'
      inputs:
        command: version
    # Needed for Terraform VM deployment
    # - task: InstallSSHKey@0
    #   inputs:
    #     knownHostsEntry: 'KNOWN_HOSTS_STRING'
    #     sshPublicKey: 'PUBLIC_KEY'
    #     sshKeySecureFile: 'id_rsa'
    - task: Bash@3
      displayName: Install Newman and JUnit reporter
      inputs:
        targetType: 'inline'
        script: |
          #! /bin/bash
          sudo apt-get upgrade -y
          sudo npm install -g newman -y
          sudo npm install -g newman-reporter-junitfull -y

    - task: CmdLine@2
      displayName: Run Regression Tests
      continueOnError: true
      inputs:
        script: 'newman run Starter_APIs_Regression_Tests.postman_collection.json -e ProjectEnv.postman_environment.json -r cli,junitfull --reporter-junitfull-export JUnitReport-regression-test-data.xml'
        workingDirectory: 'automatedtesting/postman'

    - task: CmdLine@2
      displayName: Run Data Validation Tests
      continueOnError: true
      inputs:
        script: 'newman run Starter_APIs_Data_Validation.postman_collection.json -e ProjectEnv.postman_environment.json -r cli,junitfull --reporter-junitfull-export JUnitReport-data-validation.xml'
        workingDirectory: 'automatedtesting/postman'

    - task: PublishTestResults@2
      displayName: 'Publish integrations test'
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'JUnitReport*.xml'
        mergeTestResults: true
        testRunTitle: 'Publish postman test result'
    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: 'path/to/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi
- stage:
  jobs:
  - deployment: FakeRestAPI
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: ''
              appName: ''
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  # - deployment: VMDeploy
  #   displayName: NAME
  #   environment:
  #     name:  ENVIRONMENT NAME
  #     resourceType: VirtualMachine
  #     tags: TAG NAME
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #         - task: Bash@3
  #           inputs:
  #             targetType: 'inline'
  #             script: |
  #               #! /bin/bash
                
  #               sudo apt-get upgrade -y
  #               sudo apt-get install python3-pip -y
  #               sudo apt-get install unzip -y
  #               sudo apt-get install -y chromium-browser
  #               pip3 install selenium
  #               export PATH=$PATH:some/path


